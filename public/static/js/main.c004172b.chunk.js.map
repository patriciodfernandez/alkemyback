{"version":3,"sources":["state/operation.js","views/Home.jsx","state/user.js","components/Login/Index.js","components/OperationForm/Index.js","components/OperationEdit/Index.js","components/Register/Index.js","assets/libro-mayor.png","components/AppBar/AppBar.jsx","App.js","state/store.js","reportWebVitals.js","index.js"],"names":["operation","createAsyncThunk","data","axios","post","then","respuesta","operations","get","r","getOne","id","res","deleteProduct","delete","operationReducer","createReducer","fulfilled","state","action","payload","Home","dispatch","useDispatch","navigate","useNavigate","React","useEffect","user","useSelector","arrayOperations","arrayOpUser","filter","op","userId","console","log","arrayOpUserLast10","slice","arrayIngresos","type","arraytotalIngresos","forEach","push","amount","totalIngresos","arrayEgresos","arraytotalEgresos","totalEgresos","totalFinal","className","name","Table","responsive","size","bordered","hover","map","style","backgroundColor","concept","date","onClick","register","login","email","password","setUser","createAction","logout","userReducer","usuario","Index","useState","setEmail","setPassword","emailValidate","setEmailValidate","passwordValidate","setPassworsdValidate","onSubmit","e","preventDefault","meta","requestStatus","swal","localStorage","setItem","token","htmlFor","value","onChange","target","onBlur","test","to","newOperation","setNewOperation","handleChange","conceptValidate","setConceptValidate","amountValidate","setAmountValidate","dateValidate","setDateValidate","selectedOption","setSelectedOption","encType","useParams","setConcept","setAmount","setDate","setType","oneOperation","ObjectEdited","length","put","newUser","setNewUser","nameValidate","setNameValidate","lastNameValidate","setLastNameValidate","lastName","AppBar","Navbar","expand","bg","Container","exact","Brand","src","logo","width","alt","Toggle","Collapse","Button","NavDropdown","variant","title","Divider","Item","clear","App","getItem","undefined","defaults","headers","authorization","path","element","store","configureStore","middleware","getDefaultMiddleware","concat","logger","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAGaA,EAAYC,YAAiB,qBAAqB,SAACC,GAC9D,OAAOC,IACJC,KAAK,mDAAoDF,GACzDG,MAAK,SAACC,GAAD,MAAe,SAGZC,EAAaN,YAAiB,kBAAkB,WAC3D,OAAOE,IAAMK,IAAI,oDAAoDH,MAAK,SAACI,GAAD,OAAOA,EAAEP,WAGxEQ,EAAST,YAAiB,qBAAqB,SAACU,GAC3D,OAAOR,IACJK,IADI,2DACoDG,IACxDN,MAAK,SAACO,GAAD,OAASA,EAAIV,WAEVW,EAAgBZ,YAAiB,kBAAkB,SAACU,GAE/D,OAAOR,IACJW,OADI,2DACuDH,IAC3DN,MAAK,SAACC,GAAD,OAAeA,EAAUJ,WAUpBa,EARUC,YAAc,IAAD,mBACnChB,EAAUiB,WAAY,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,WADb,cAEnCb,EAAWU,WAAY,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,WAFd,cAGnCV,EAAOO,WAAY,SAACC,EAAOC,GAAR,MAAmB,CAACA,EAAOC,YAHX,cAInCP,EAAcI,WAAY,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,WAJjB,I,8BC8HvBC,EA3IF,WACX,IAAMC,EAAWC,cACXC,EAAWC,cAEjBC,IAAMC,WAAU,WACdL,EAASf,OACR,CAACe,IACJ,IAAMM,EAAOC,aAAY,SAACX,GAAD,OAAWA,EAAMU,QAGtCE,EAAkBD,aAAY,SAACX,GAAD,OAAWA,EAAMlB,aAG/C+B,EAAW,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAiBE,QAAO,SAACC,GACzC,OAAOA,EAAGC,UAAH,OAAcN,QAAd,IAAcA,OAAd,EAAcA,EAAMjB,OAE7BwB,QAAQC,IAAI,eAAeL,GAE3B,IAAIM,EAAoBN,EAAYO,OAAO,IAGvCC,EAAgBR,EAAYC,QAAO,SAACC,GACtC,MAAmB,YAAZA,EAAGO,QAERC,EAAqB,GACzBF,EAAcG,SAAQ,SAACT,GAAD,OAAQQ,EAAmBE,KAAKV,EAAGW,WAIzD,IAFA,IAAIC,EAAgB,EAEpB,MAAcJ,EAAd,eAAkC,CAChCI,GADQ,KAKV,IAAMC,EAAef,EAAYC,QAAO,SAACC,GACvC,MAAmB,WAAZA,EAAGO,QAENO,EAAoB,GAC1BD,EAAaJ,SAAQ,SAACT,GAAD,OAAQc,EAAkBJ,KAAKV,EAAGW,WAIvD,IAFA,IAAII,EAAe,EAEnB,MAAcD,EAAd,eAAiC,CAC/BC,GADQ,KAKV,IAAMC,EAAaJ,EAAgBG,EAWnC,OACE,8BACGpB,EAAKjB,GACJ,gCACE,qBAAKuC,UAAU,gBAAf,SACE,sBAAKA,UAAU,cAAf,UACG,IADH,yCAE+BtB,EAAKuB,KAFpC,KAGE,uBAHF,oCAGgCvB,EAAKjB,GAHrC,UAMF,qBAAKuC,UAAU,qBAAf,SACE,eAACE,EAAA,EAAD,CAAOC,YAAU,EAACC,KAAK,KAAKC,UAAQ,EAACC,OAAK,EAA1C,UACE,gCACE,+BACE,0CACA,wCACA,sCACA,sCACA,8CAGJ,gCACGnB,EAAkBoB,KAAI,SAACxB,GACtB,OACE,qBAEEyB,MAAO,CACLC,gBACc,YAAZ1B,EAAGO,KAAqB,UAAY,WAJ1C,UAOE,6BAAKP,EAAG2B,UACR,6BAAK3B,EAAGW,SACR,6BAAKX,EAAG4B,OACR,6BAAK5B,EAAGO,OACR,+BACE,wBACEsB,QAAS,kBA/CHnD,EA+C8BsB,EAAGtB,QA9C7DW,EAASZ,EAAOC,IAAKN,KAAKmB,EAAS,mBAAD,OAAoBb,KAD3B,IAACA,GAgDNuC,UAAU,0CAFZ,oBAMA,wBACEY,QAAS,kBAlDRnD,EAkD8BsB,EAAGtB,QAjDxDW,EAAST,EACNF,IAAKN,KAAKmB,EAAS,MAFA,IAACb,GAmDDuC,UAAU,wCAFZ,yBAjBGjB,EAAGtB,SA6Bf,gCACC,+BACE,+CAEA,+BACG,IACD,6BAAKsC,oBAQjB,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,cAAf,UACG,IADH,kF,OCpIGa,EAAW9D,YAAiB,oBAAoB,SAACC,GAC5D,OAAOC,IACJC,KAAK,sDAAuDF,GAC5DG,MAAK,SAACC,GAAD,MAAe,SAGZ0D,EAAQ/D,YAAiB,iBAAiB,SAACC,GACtD,OAAOC,IACJC,KAAK,mDAAoD,CACxD6D,MAAO/D,EAAK+D,MACZC,SAAUhE,EAAKgE,WAEhB7D,MAAK,SAACC,GAAD,OAAeA,EAAUJ,WAEtBiE,EAAUC,YAAa,YAEvBC,EAASD,YAAa,UASpBE,EAPKtD,YAAc,IAAD,iBAAC,EAC/B+C,EAAS9C,WAAY,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,WADjB,YAAC,EAE/B4C,EAAM/C,WAAY,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,QAAQmD,WAFtB,YAAC,EAG/BF,GAAS,SAACnD,EAAOC,GAAR,MAAmB,MAHE,YAAC,EAI/BgD,GAAU,SAACjD,EAAOC,GAAR,OAAmBA,EAAOC,WAJN,I,yBCqGlBoD,G,MAvHD,WACZ,IAAMhD,EAAWC,cACXH,EAAWC,cACjB,EAA0BkD,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBS,EAAjB,KAwBA,EAA0CF,mBAAS,WAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAiDJ,mBAAS,WAA1D,mBAAOK,EAAP,KAAyBC,EAAzB,KAsBA,OACE,qBAAK7B,UAAU,yBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBAAMA,UAAU,YAAY8B,SAhDZ,SAACC,GACrBA,EAAEC,iBAEoB,YAAlBN,GAAiD,YAAlBA,EACjCtD,EAAS0C,EAAM,CAAEC,MAAOA,EAAOC,SAAUA,KAAa7D,MAAK,SAACH,GAC1D,GAAgC,aAA5BA,EAAKiF,KAAKC,cAEZ,OADAT,EAAY,IACLU,IAAK,uCAGVnF,EAAKkB,UACPkE,aAAaC,QAAQ,QAASrF,EAAKkB,QAAQoE,OAC3CH,IAAK,cACL7D,EAAS,SAKb6D,IAAK,kCA8BH,UACE,oBAAInC,UAAU,OAAd,mBACA,sBAAKA,UAAU,aAAf,UACE,uBAAOuC,QAAQ,cAAf,mBACA,uBACE9E,GAAG,cACHuC,UAAS,wBACW,YAAlB0B,EACI,GACkB,YAAlBA,EACA,YACA,aALG,qCAQTc,MAAOzB,EACP0B,SAAU,SAACV,GAAD,OAAOP,EAASO,EAAEW,OAAOF,QACnCG,OAvCW,SAACZ,GAIR,KAAVhB,GAHY,iBAGc6B,KAAK7B,GACjCY,EAAiB,WAGjBA,EAAiB,gBAiCX,qBAAK3B,UAAU,mBAAf,wCACA,qBAAKA,UAAU,iBAAf,uCAGF,sBAAKA,UAAU,aAAf,UACE,uBAAOuC,QAAQ,iBAAf,2BACA,uBACEjD,KAAK,WACL7B,GAAG,iBACHuC,UAAS,wBACc,YAArB4B,EACI,GACqB,YAArBA,EACA,YACA,aALG,qCAQTY,MAAOxB,EACPyB,SAAU,SAACV,GAAD,OAAON,EAAYM,EAAEW,OAAOF,QACtCG,OAhDc,SAACZ,GAEvBF,EADe,KAAbb,EACmB,UAGA,gBA6Cf,qBAAKhB,UAAU,mBAAf,+CACA,qBAAKA,UAAU,iBAAf,sCAOF,wBACEvC,GAAG,eACH6B,KAAK,SACLU,UAAU,qBAHZ,mBASA,cAAC,IAAD,CAAM6C,GAAG,YAAY7C,UAAU,mBAA/B,qC,OCoEKsB,EAjLD,WACZ,IAAM5C,EAAOC,aAAY,SAACX,GAAD,OAAWA,EAAMU,QACpCJ,EAAWC,cACXH,EAAWC,cAEjB,EAAwCkD,mBAAS,IAAjD,mBAAOuB,EAAP,KAAqBC,EAArB,KACIrE,IACFoE,EAAa9D,OAASN,EAAKjB,IAE7B,IAAMuF,EAAe,SAACjB,GACpBgB,EAAgB,2BAAKD,GAAN,kBAAqBf,EAAEW,OAAOzC,KAAO8B,EAAEW,OAAOF,UAkB/D,EAA8CjB,mBAAS,WAAvD,mBAAO0B,EAAP,KAAwBC,EAAxB,KACA,EAA4C3B,mBAAS,WAArD,mBAAO4B,EAAP,KAAuBC,EAAvB,KACA,EAAwC7B,mBAAS,WAAjD,mBAAO8B,EAAP,KAAqBC,EAArB,KAiCA,EAA4C/B,mBAAS,wBAArD,mBAAOgC,EAAP,KAAuBC,EAAvB,KAOC,MALsB,yBAAnBD,IACFT,EAAaxD,KAAOiE,GAKpB,8BACE,qBAAKvD,UAAU,yBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,YACV8B,SA/Da,SAACC,GACtBA,EAAEC,iBAGoB,YAApBiB,GACiB,YAAjBI,GACmB,YAAnBF,GAEC/E,EAAStB,EAAUgG,IAAe3F,MAAK,WACtCgF,IAAK,6CACL7D,EAAS,SAsDLmF,QAAQ,sBAHV,UAKE,oBAAIzD,UAAU,OAAd,wBAEA,sBAAKA,UAAU,aAAf,UACE,+CACA,uBACEV,KAAK,UACL7B,GAAG,gBACHuC,UAAS,wBACa,YAApBiD,EACI,GACoB,YAApBA,EACA,YACA,aALG,mCAQThD,KAAK,UACLwC,SAAUO,EACVL,OAhEW,SAACZ,GAGK,KAAzBe,EAAapC,SAFD,WAE6BkC,KAAKE,EAAapC,SAC7DwC,EAAmB,WAGnBA,EAAmB,gBA2DX,qBAAKlD,UAAU,iBAAf,mCACA,sBAAKA,UAAU,mBAAf,0CAC6B,UAG/B,sBAAKA,UAAU,aAAf,UACE,4CACA,uBACEV,KAAK,SACL7B,GAAG,eACHuC,UAAS,wBACY,YAAnBmD,EACI,GACmB,YAAnBA,EACA,YACA,aALG,mCAQTlD,KAAK,SACLwC,SAAUO,EACVL,OA5EU,SAACZ,GAGK,KAAxBe,EAAapD,QAFD,QAE4BkD,KAAKE,EAAapD,QAC5D0D,EAAkB,WAGlBA,EAAkB,gBAuEV,qBAAKpD,UAAU,iBAAf,oCACA,sBAAKA,UAAU,mBAAf,+CAC+B,UAIjC,sBAAKA,UAAU,aAAf,UACE,yCACA,uBACEV,KAAK,OACL7B,GAAG,aACHuC,UAAS,wBACU,YAAjBqD,EACI,GACiB,YAAjBA,EACA,YACA,aALG,mCAQTpD,KAAK,OACLwC,SAAUO,EACVL,OAzFQ,SAACZ,GAGK,KAAtBe,EAAanC,MAFD,QAE0BiC,KAAKE,EAAanC,MAC1D2C,EAAgB,WAGhBA,EAAgB,gBAoFR,qBAAKtD,UAAU,iBAAf,oCACA,qBAAKA,UAAU,mBAAf,4CAGF,sBAAKA,UAAU,aAAf,UACE,yCACA,yBACEC,KAAK,QAELD,UAAU,eACVwC,MAAOe,EAEPd,SAAU,SAAAV,GAAC,OAAIyB,EAAkBzB,EAAEW,OAAOF,QAN5C,UAQE,wBAAQA,MAAM,aAAd,kCARF,IASE,wBAAQA,MAAM,UAAd,sBACA,wBAAQA,MAAM,SAAd,2BAIJ,wBACE/E,GAAG,mBACH6B,KAAK,SACLU,UAAU,qBAHZ,8BCvCGsB,EA5HD,WACZ,IAAM7D,EAAOiG,cAAPjG,GACAa,EAAWC,cAEXH,EAAWC,cACjBG,IAAMC,WAAU,WACdL,EAASZ,EAAOC,IAAKN,MAAK,SAACH,GACrBA,EAAKkB,UACPyF,EAAW3G,EAAKkB,QAAQwC,SACxBkD,EAAU5G,EAAKkB,QAAQwB,QACvBmE,EAAQ7G,EAAKkB,QAAQyC,MACrBmD,EAAQ9G,EAAKkB,QAAQoB,UAIzBhB,EAAS,mBAAD,OAAoBb,MAG3B,CAACW,IACJ,IAAI2F,EAAepF,aAAY,SAACX,GAAD,OAAWA,EAAMlB,aAEhD,EAA8ByE,mBAAS,IAAvC,mBAAOb,EAAP,KAAgBiD,EAAhB,KACA,EAA4BpC,mBAAS,IAArC,mBAAO7B,EAAP,KAAekE,EAAf,KACA,EAAwBrC,mBAAS,IAAjC,mBAAOZ,EAAP,KAAakD,EAAb,KACA,EAAwBtC,mBAAS,IAAjC,mBAAOjC,EAAP,KAAawE,EAAb,KAoBME,EAAe,CAAEtD,UAAShB,SAAQiB,OAAMrB,QAiB9C,OACE,8BACE,8BACGyE,EAAaE,OACZ,qBAAKjE,UAAU,yBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,YACV8B,SAvBQ,SAACC,GAGrB,OAFAA,EAAEC,iBAEK/E,IACJiH,IADI,2DACoDzG,GAAMuG,GAC9D7G,MAAK,SAACC,GACL6B,QAAQC,IAAI9B,MAGbD,MAAK,WACJgF,IAAK,qBAEL7D,EAAS,SAYDmF,QAAQ,sBAHV,UAKE,oBAAIzD,UAAU,OAAd,iCACA,sBAAKA,UAAU,aAAf,UACE,6CACA,0BACEwC,MAAO9B,EACPV,UAAU,eACVyC,SAlDU,SAACV,GAC3B4B,EAAW5B,EAAEW,OAAOF,aAoDR,sBAAKxC,UAAU,aAAf,UACE,2CACA,uBACEwC,MAAO9C,EACPM,UAAU,eACVyC,SAtDS,SAACV,GAC1B6B,EAAU7B,EAAEW,OAAOF,aAyDP,qBAAKxC,UAAU,eAEf,sBAAKA,UAAU,aAAf,UACE,0CACA,uBACEwC,MAAO7B,EACPX,UAAU,eACVyC,SA7DO,SAACV,GACxB8B,EAAQ9B,EAAEW,OAAOF,aAgEL,sBAAKxC,UAAU,aAAf,UACE,yCACA,uBACEwC,MAAOlD,EACPU,UAAU,eACVyC,SAlEO,SAACV,GACxB+B,EAAQ/B,EAAEW,OAAOF,aAqEL,wBAAQlD,KAAK,SAASU,UAAU,qBAAhC,8BAON,eCoEKsB,EAzLD,WACZ,IAAMhD,EAAWC,cACXH,EAAWC,cACjB,EAA8BkD,mBAAS,IAAvC,mBAAO4C,EAAP,KAAgBC,EAAhB,KAEMpB,EAAe,SAACjB,GACpBqC,EAAW,2BAAKD,GAAN,kBAAgBpC,EAAEW,OAAOzC,KAAO8B,EAAEW,OAAOF,UA2BrD,EAA0CjB,mBAAS,WAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAiDJ,mBAAS,WAA1D,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAwCN,mBAAS,WAAjD,mBAAO8C,EAAP,KAAqBC,EAArB,KACA,EAAgD/C,mBAAS,WAAzD,mBAAOgD,EAAP,KAAyBC,EAAzB,KA2CA,OACE,qBAAKxE,UAAU,yBAAf,SACA,qBAAKA,UAAU,kBAAf,SACE,uBACEA,UAAU,YACV8B,SA3EgB,SAACC,GACrBA,EAAEC,iBAIkB,YAAlBN,GACkB,YAAjB2C,GACoB,YAArBzC,GACqB,YAArB2C,IAEAtF,QAAQC,IAAI,kBACZd,EAASyC,EAASsD,IAAUhH,MAAK,SAACH,GAChC,GAAgC,aAA5BA,EAAKiF,KAAKC,cACZ,OAAOC,IAAK,wBAEZA,IAAK,wCACL7D,EAAS,eA4DXmF,QAAQ,sBAHV,UAKE,oBAAIzD,UAAU,OAAd,sBAEA,sBAAKA,UAAU,aAAf,UACE,uBAAOuC,QAAQ,aAAf,sBACA,uBACEjD,KAAK,OACL7B,GAAG,aACHuC,UAAS,wBACU,YAAjBqE,EACI,GACiB,YAAjBA,EACA,YACA,aALG,mCAQTpE,KAAK,OACLwC,SAAUO,EACVL,OA7CY,SAACZ,GAGA,KAAjBoC,EAAQlE,MAFI,WAEqB2C,KAAKuB,EAAQlE,MAChDqE,EAAgB,WAGhBA,EAAgB,gBAwCZ,qBAAKtE,UAAU,iBAAf,mCACA,qBAAKA,UAAU,mBAAf,2CAEF,sBAAKA,UAAU,aAAf,UACE,uBAAOuC,QAAQ,iBAAf,wBACA,uBACEjD,KAAK,WACL7B,GAAG,iBACHuC,UAAS,wBACc,YAArBuE,EACI,GACqB,YAArBA,EACA,YACA,aALG,mCAQTtE,KAAK,WACLwC,SAAUO,EACVL,OAvDgB,SAACZ,GAGA,KAArBoC,EAAQM,UAFI,WAEyB7B,KAAKuB,EAAQM,UACpDD,EAAoB,WAGpBA,EAAoB,gBAkDhB,qBAAKxE,UAAU,iBAAf,oCACA,qBAAKA,UAAU,mBAAf,6CAGF,sBAAKA,UAAU,aAAf,UACE,uBAAOuC,QAAQ,cAAf,mBACA,uBACEjD,KAAK,QACL7B,GAAG,cACHuC,UAAS,wBACW,YAAlB0B,EACI,GACkB,YAAlBA,EACA,YACA,aALG,mCAQTzB,KAAK,QACLwC,SAAUO,EACVL,OA3Ga,SAACZ,GAIA,KAAlBoC,EAAQpD,OAHI,iBAGsB6B,KAAKuB,EAAQpD,OACjDY,EAAiB,WAGjBA,EAAiB,gBAqGb,qBAAK3B,UAAU,iBAAf,oCACA,qBAAKA,UAAU,mBAAf,2CAGF,sBAAKA,UAAU,aAAf,UACE,uBAAOuC,QAAQ,iBAAf,2BACA,uBACEjD,KAAK,WACL7B,GAAG,iBACHuC,UAAS,wBACc,YAArB4B,EACI,GACqB,YAArBA,EACA,YACA,aALG,mCAQT3B,KAAK,WACLwC,SAAUO,EACVL,OApHgB,SAACZ,GACC,KAArBoC,EAAQnD,SACXa,EAAqB,WAGrBA,EAAqB,gBAiHjB,qBAAK7B,UAAU,iBAAf,oCACA,qBAAKA,UAAU,mBAAf,oDAGF,wBACEvC,GAAG,kBACH6B,KAAK,SACLU,UAAU,qBAHZ,8B,QCpLO,MAA0B,wC,gCCoF1B0E,EApEA,WACb,IAAMtG,EAAWC,cAEXK,EAAOC,aAAY,SAACX,GAAD,OAAWA,EAAMU,QAEpCJ,EAAWC,cAUjB,OACE,8BACE,cAACoG,EAAA,EAAD,CAAQC,OAAO,KAAKC,GAAG,UAAvB,SACE,eAACC,EAAA,EAAD,CAAW9E,UAAU,SAArB,UACE,8BACE,cAAC,IAAD,CAAM+E,OAAK,EAAClC,GAAG,IAAf,SACE,cAAC8B,EAAA,EAAOK,MAAR,UACE,qBAAKC,IAAKC,EAAMC,MAAM,KAAKC,IAAI,sBAIrC,gCACE,cAACT,EAAA,EAAOU,OAAR,CAAe,gBAAc,qBAC7B,cAACV,EAAA,EAAOW,SAAR,CAAiB7H,GAAG,mBAApB,SACGiB,EAAKjB,GACJ,sBAAKuC,UAAU,wDAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAM6C,GAAI,iBAAV,SACE,cAAC0C,EAAA,EAAD,CAAQvF,UAAU,2BAAlB,oCAIJ,qBAAKA,UAAU,kEAAf,6BAA4FtB,EAAKuB,KAAjG,OACA,eAACuF,EAAA,EAAD,CACEC,QAAQ,QACRC,MAAO,cAAC,IAAD,IACP1F,UAAU,iCACVvC,GAAG,qBAJL,UAME,cAAC+H,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYI,KAAb,CAAkBhF,QAtCrB,SAACmB,GACdA,EAAEC,iBACFI,aAAayD,QAEbzH,EAAS+C,KACT7C,EAAS,MAiCO,oCAMJ,sBAAK0B,UAAU,gCAAf,UACE,cAAC,IAAD,CAAM6C,GAAI,SAAV,SACE,cAAC0C,EAAA,EAAD,CAAQvF,UAAU,eAAlB,wBAEF,cAAC,IAAD,CAAM6C,GAAI,YAAV,SACE,cAAC0C,EAAA,EAAD,CAAQE,QAAQ,UAAhB,2CCvBLK,G,cAhCH,WACV,IAAM1H,EAAWC,cAejB,OAdAG,IAAMC,WAAU,WACd,IAAM6D,EAAQF,aAAa2D,QAAQ,SAC/B3D,aAAa2D,QAAQ,cACrBC,EACA1D,IACFrF,IAAMgJ,SAASC,QAAQC,cAAvB,UAA0C7D,GAC1CrF,IAAMC,KAAK,iDAAiDC,MAAK,SAACH,GAE/DoB,EAAS6C,EAAQjE,EAAKA,aAIzB,IAGF,gCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoJ,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,QAAS,cAAC,EAAD,MAE3C,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,c,iBC9BzBC,EARDC,YAAe,CAC3BC,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOC,MACpEC,QAAS,CACPlI,KAAM0C,EACNtE,UAAWe,KCGAgJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5J,MAAK,YAAkD,IAA/C6J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjB,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINkB,SAASC,eAAe,SAE1BZ,K","file":"static/js/main.c004172b.chunk.js","sourcesContent":["import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const operation = createAsyncThunk(\"OPERATION_REQUEST\", (data) => {\n  return axios\n    .post(\"https://alkemy-back.herokuapp.com/api/operations\", data)\n    .then((respuesta) => []);\n});\n\nexport const operations = createAsyncThunk(\"OPERATIONS_GET\", () => {\n  return axios.get(\"https://alkemy-back.herokuapp.com/api/operations\").then((r) => r.data);\n});\n\nexport const getOne = createAsyncThunk(\"GET_ONE_OPERATION\", (id) => {\n  return axios\n    .get(`https://alkemy-back.herokuapp.com/api/operations/${id}`)\n    .then((res) => res.data);\n});\nexport const deleteProduct = createAsyncThunk(\"DELETE_PRODUCT\", (id) => {\n  /*En algun lugar de la data tiene que venir el id para encontrar la ruta*/\n  return axios\n    .delete(`https://alkemy-back.herokuapp.com/api/operations/${id}`)\n    .then((respuesta) => respuesta.data);\n});\nconst operationReducer = createReducer([], {\n  [operation.fulfilled]: (state, action) => action.payload,\n  [operations.fulfilled]: (state, action) => action.payload,\n  [getOne.fulfilled]: (state, action) => [action.payload],\n  [deleteProduct.fulfilled]: (state, action) => action.payload, \n});\n\n\nexport default operationReducer;\n","import React from \"react\";\nimport { operations } from \"../state/operation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getOne } from \"../state/operation\";\nimport { deleteProduct } from \"../state/operation\";\n\n\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    dispatch(operations());\n  }, [dispatch]);\n  const user = useSelector((state) => state.user);\n\n  // Todos las operaciones de la tablaschema\n  var arrayOperations = useSelector((state) => state.operation);\n\n  // Todos las operaciones del usuario\n  var arrayOpUser = arrayOperations?.filter((op) => {\n    return op.userId === user?.id;\n  });\n  console.log(\"arrayOpUser,\",arrayOpUser)\n  // ultimas 10 operaciones\n  var arrayOpUserLast10 = arrayOpUser.slice(-10);\n\n  // Todos los ingresos\n  var arrayIngresos = arrayOpUser.filter((op) => {\n    return op.type === \"ingreso\";\n  });\n  var arraytotalIngresos = [];\n  arrayIngresos.forEach((op) => arraytotalIngresos.push(op.amount));\n\n  var totalIngresos = 0;\n\n  for (let i of arraytotalIngresos) {\n    totalIngresos += i;\n  }\n\n  // Todos los Egresos\n  const arrayEgresos = arrayOpUser.filter((op) => {\n    return op.type === \"egreso\";\n  });\n  const arraytotalEgresos = [];\n  arrayEgresos.forEach((op) => arraytotalEgresos.push(op.amount));\n\n  var totalEgresos = 0;\n\n  for (let i of arraytotalEgresos) {\n    totalEgresos += i;\n  }\n\n  // suma final\n  const totalFinal = totalIngresos - totalEgresos;\n\n  const seleccionarOperation = (id) => {\n    dispatch(getOne(id)).then(navigate(`/operation/edit/${id}`));\n  };\n  const borrarOperation = (id) => {\n    dispatch(deleteProduct\n      (id)).then(navigate(`/`));\n  };\n  \n \n  return (\n    <div>\n      {user.id ? (\n        <div>\n          <div className=\"display-4 m-5\">\n            <div className=\"text-center\">\n              {\" \"}\n              Bienvenido a tu balance {`¡${user.name}!`}\n              <br /> tu cuenta es la nº {`${user.id}!`}\n            </div>\n          </div>\n          <div className=\"row no-gutters m-1\">\n            <Table responsive size=\"sm\" bordered hover>\n              <thead>\n                <tr>\n                  <th>Concepto</th>\n                  <th>Amount</th>\n                  <th>Date</th>\n                  <th>Type</th>\n                  <th>Options</th>\n                </tr>\n              </thead>\n              <tbody>\n                {arrayOpUserLast10.map((op) => {\n                  return (\n                    <tr\n                      key={op.id}\n                      style={{\n                        backgroundColor:\n                          op.type === \"ingreso\" ? \"#65f078\" : \"#fd8484\",\n                      }}\n                    >\n                      <td>{op.concept}</td>\n                      <td>{op.amount}</td>\n                      <td>{op.date}</td>\n                      <td>{op.type}</td>\n                      <td>\n                        <button\n                          onClick={() => seleccionarOperation(op.id)}\n                          className=\"btn btn-sm text-light bg-secondary mx-2\"\n                        >\n                          Editar\n                        </button>\n                        <button\n                          onClick={() => borrarOperation(op.id)}\n                          className=\"btn btn-sm text-light bg-danger  mx-2\"\n                        >\n                          Borrar\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n\n               <thead>\n                <tr>\n                  <th> Saldo TOTAL </th>\n\n                  <th>\n                    {\" \"}\n                    <h3>{totalFinal}</h3>\n                  </th>\n                </tr>\n              </thead>\n            </Table>\n          </div>\n        </div>\n      ) : (\n        <div className=\"display-4 m-5\">\n          <div className=\"text-center\">\n            {\" \"}\n            Bienvenido a tu balance, por favor ingresa o registra una nueva\n            cuenta.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import {\n  createReducer,\n  createAsyncThunk,\n  createAction,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const register = createAsyncThunk(\"REGISTER_REQUEST\", (data) => {\n  return axios\n    .post(\"https://alkemy-back.herokuapp.com/api/auth/register\", data)\n    .then((respuesta) => []);\n});\n\nexport const login = createAsyncThunk(\"LOGIN_REQUEST\", (data) => {\n  return axios\n    .post(\"https://alkemy-back.herokuapp.com/api/auth/login\", {\n      email: data.email,\n      password: data.password,\n    })\n    .then((respuesta) => respuesta.data);\n});\nexport const setUser = createAction(\"SET_USER\");\n\nexport const logout = createAction(\"LOGOUT\");\n\nconst userReducer = createReducer([], {\n  [register.fulfilled]: (state, action) => action.payload,\n  [login.fulfilled]: (state, action) => action.payload.usuario,\n  [logout]: (state, action) => [],\n  [setUser]: (state, action) => action.payload,\n});\n\nexport default userReducer;\n"," import React,{ useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../state/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\nconst Index = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (emailValidate === \"mostrar\" && emailValidate === \"mostrar\") {\n      dispatch(login({ email: email, password: password })).then((data) => {\n        if (data.meta.requestStatus === \"rejected\") {\n          setPassword(\"\");\n          return swal(\"Usuario o contraseña incorrectos\");\n        }\n\n        if (data.payload) {\n          localStorage.setItem(\"token\", data.payload.token);\n          swal(\"Logged in!\");\n          navigate(\"/\");\n\n        }\n      });\n    } else {\n      swal(\"¡Ingrese datos válidos!\");\n    }\n  };\n\n  const [emailValidate, setEmailValidate] = useState(\"inicial\");\n  const [passwordValidate, setPassworsdValidate] = useState(\"inicial\");\n\n  const requeridoEmail = (e) => {\n    let expresion = /\\w+@\\w+\\.[a-z]/;\n    //     \\w (es texto)\n    //     \\. (es punto)\n    if (email !== \"\" && expresion.test(email)) {\n      setEmailValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setEmailValidate(\"nomostrar\");\n    }\n  };\n\n  const requeridoPassword = (e) => {\n    if (password !== \"\") {\n      setPassworsdValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setPassworsdValidate(\"nomostrar\");\n    }\n  };\n  return (\n    <div className=\"row no-gutters wrapper\">\n      <div className=\"col-10 col-lg-5\">\n        <form className=\"shadow-lg\" onSubmit={submitHandler}>\n          <h1 className=\"mb-3\">Login</h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"email_field\">Email</label>\n            <input\n              id=\"email_field\"\n              className={` form-control ${\n                emailValidate === \"inicial\"\n                  ? \"\"\n                  : emailValidate === \"mostrar\"\n                  ? \"is-valid \"\n                  : \"is-invalid\"\n              }             \n                  `}\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              onBlur={requeridoEmail}\n            />\n            <div className=\"invalid-feedback\">Ingrese un email válido</div>\n            <div className=\"valid-feedback\">Todo bien, continúe</div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password_field\">Contraseña</label>\n            <input\n              type=\"password\"\n              id=\"password_field\"\n              className={` form-control ${\n                passwordValidate === \"inicial\"\n                  ? \"\"\n                  : passwordValidate === \"mostrar\"\n                  ? \"is-valid \"\n                  : \"is-invalid\"\n              }             \n                  `}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              onBlur={requeridoPassword}\n            />\n            <div className=\"invalid-feedback\">Entre una contraseña válida</div>\n            <div className=\"valid-feedback\">Todo bien continúe</div>\n          </div>\n\n          {/* <Link to=\"/password/forgot\" className=\"float-right mb-4\">\n            Olvidó su contraseña?\n          </Link> */}\n\n          <button\n            id=\"login_button\"\n            type=\"submit\"\n            className=\"btn btn-block py-3\"\n          >\n            LOGIN\n          </button>\n        \n\n          <Link to=\"/register\" className=\"float-right mt-3\">\n            Nuevo usuario?\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport \"../Login/Login.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { operation } from \"../../state/operation\";\nimport swal from \"sweetalert\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Index = () => {\n  const user = useSelector((state) => state.user);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  \n  const [newOperation, setNewOperation] = useState({});\n  if (user) {\n    newOperation.userId = user.id;\n  } \n  const handleChange = (e) => {\n    setNewOperation({ ...newOperation, [e.target.name]: e.target.value });\n  };\n\n  const submitHandleer = (e) => {\n    e.preventDefault();\n\n    if (\n      conceptValidate === \"mostrar\" &&\n      dateValidate === \"mostrar\" &&\n      amountValidate === \"mostrar\" \n    ) {\n       dispatch(operation(newOperation)).then(() => {\n        swal(\"¡Operación registrada exitosamente!\");\n        navigate(\"/\");\n      });\n    }\n  };\n\n  const [conceptValidate, setConceptValidate] = useState(\"inicial\");\n  const [amountValidate, setAmountValidate] = useState(\"inicial\");\n  const [dateValidate, setDateValidate] = useState(\"inicial\");\n \n  const requeridoConcept = (e) => {\n    let expresion = /[A-Za-z]/;\n\n    if (newOperation.concept !== \"\" && expresion.test(newOperation.concept)) {\n      setConceptValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setConceptValidate(\"nomostrar\");\n    }\n  };\n  const requeridoAmount = (e) => {\n    let expresion = /[0-9]/;\n\n    if (newOperation.amount !== \"\" && expresion.test(newOperation.amount)) {\n      setAmountValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setAmountValidate(\"nomostrar\");\n    }\n  };\n  const requeridoDate = (e) => {\n    let expresion = /[0-9]/;\n\n    if (newOperation.date !== \"\" && expresion.test(newOperation.date)) {\n      setDateValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setDateValidate(\"nomostrar\");\n    }\n  };\n  \n  const [selectedOption, setSelectedOption] = useState(\"Tipo de operación\");\n \n  if (selectedOption !== \"Tipo de operación\") {\n    newOperation.type = selectedOption;\n  } \n\n\n   return (\n    <div>\n      <div className=\"row no-gutters wrapper\">\n        <div className=\"col-10 col-lg-5\">\n          <form\n            className=\"shadow-lg\"\n            onSubmit={submitHandleer}\n            encType=\"multipart/form-data\"\n          >\n            <h1 className=\"mb-3\">Operations</h1>\n\n            <div className=\"form-group\">\n              <label> Concepto </label>\n              <input\n                type=\"Concept\"\n                id=\"Concept_field\"\n                className={` form-control ${\n                  conceptValidate === \"inicial\"\n                    ? \"\"\n                    : conceptValidate === \"mostrar\"\n                    ? \"is-valid \"\n                    : \"is-invalid\"\n                }             \n                `}\n                name=\"concept\"\n                onChange={handleChange}\n                onBlur={requeridoConcept}\n              />\n              <div className=\"valid-feedback\">Todo bien continúe</div>\n              <div className=\"invalid-feedback\">\n                Ingrese un concepto válido{\" \"}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label> Monto </label>\n              <input\n                type=\"Amount\"\n                id=\"Amount_field\"\n                className={` form-control ${\n                  amountValidate === \"inicial\"\n                    ? \"\"\n                    : amountValidate === \"mostrar\"\n                    ? \"is-valid \"\n                    : \"is-invalid\"\n                }             \n                `}\n                name=\"amount\"\n                onChange={handleChange}\n                onBlur={requeridoAmount}\n              />\n              <div className=\"valid-feedback\">Todo bien, continúe</div>\n              <div className=\"invalid-feedback\">\n                Entre un monto válido válido{\" \"}\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Date</label>\n              <input\n                type=\"date\"\n                id=\"date_field\"\n                className={` form-control ${\n                  dateValidate === \"inicial\"\n                    ? \"\"\n                    : dateValidate === \"mostrar\"\n                    ? \"is-valid \"\n                    : \"is-invalid\"\n                }             \n                `}\n                name=\"date\"\n                onChange={handleChange}\n                onBlur={requeridoDate}\n              />\n              <div className=\"valid-feedback\">Todo bien, continúe</div>\n              <div className=\"invalid-feedback\">Ingrese una fecha válida</div>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Type</label>\n              <select\n                name=\"store\"\n                \n                className=\"form-control\"\n                value={selectedOption}\n\n                onChange={e => setSelectedOption(e.target.value)}>\n              \n                <option value=\"seleccione\">Tipo de operación</option>;\n                <option value=\"ingreso\">Ingreso </option>\n                <option value=\"egreso\">Egreso </option>\n              </select>\n            </div>\n\n            <button\n              id=\"Operation_button\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n            >\n              Enviar\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getOne } from \"../../state/operation\";\nimport swal from \"sweetalert\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Index = () => {\n  let { id } = useParams();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(getOne(id)).then((data) => {\n      if (data.payload) {\n        setConcept(data.payload.concept)\n        setAmount(data.payload.amount)\n        setDate(data.payload.date)\n        setType(data.payload.type)\n\n      }\n    });\n    navigate(`/operation/edit/${id}`);\n\n    // eslint-disable-next-line\n  }, [dispatch]);\n  var oneOperation = useSelector((state) => state.operation);\n\n  const [concept, setConcept] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n   \n \n  const handleChangeConcept = (e) => {\n    setConcept(e.target.value);\n  };\n\n  const handleChangeAmount = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const handleChangeDate = (e) => {\n    setDate(e.target.value);\n  };\n\n  const handleChangeType = (e) => {\n    setType(e.target.value);\n  };\n\n  const ObjectEdited = { concept, amount, date, type };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    return axios\n      .put(`https://alkemy-back.herokuapp.com/api/operations/${id}`, ObjectEdited)\n      .then((respuesta) => {\n        console.log(respuesta);\n       })\n       \n      .then(() => {\n        swal(\"Producto editado!\");\n\n        navigate(`/`);\n      });\n  };\n  return (\n    <div>\n      <div>\n        {oneOperation.length ? (\n          <div className=\"row no-gutters wrapper\">\n            <div className=\"col-10 col-lg-5\">\n              <form\n                className=\"shadow-lg\"\n                onSubmit={submitHandler}\n                encType=\"multipart/form-data\"\n              >\n                <h1 className=\"mb-3\">Editar Operación</h1>\n                <div className=\"form-group\">\n                  <label>Concepto</label>\n                  <textarea\n                    value={concept}\n                    className=\"form-control\"\n                    onChange={handleChangeConcept}\n                  ></textarea>\n                </div>\n                <div className=\"form-group\">\n                  <label>Monto </label>\n                  <input\n                    value={amount}\n                    className=\"form-control\"\n                    onChange={handleChangeAmount}\n                  />\n                </div>\n\n                <div className=\"form-group\"></div>\n\n                <div className=\"form-group\">\n                  <label>Fecha</label>\n                  <input\n                    value={date}\n                    className=\"form-control\"\n                    onChange={handleChangeDate}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>Tipo</label>\n                  <input\n                    value={type}\n                    className=\"form-control\"\n                    onChange={handleChangeType}\n                  />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-block py-3\">\n                  CONFIRMAR\n                </button>\n              </form>\n            </div>\n          </div>\n        ) : (\n          \"loading\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n","import React, {  useState } from \"react\";\nimport \"../Login/Login.css\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { register } from \"../../state/user\";\nimport swal from \"sweetalert\";\n\n\nconst Index = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [newUser, setNewUser] = useState({});\n\n  const handleChange = (e) => {\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n  \n\n    if (\n      emailValidate === \"mostrar\" &&\n       nameValidate === \"mostrar\" &&\n      passwordValidate === \"mostrar\" &&\n      lastNameValidate === \"mostrar\"\n    ) {\n      console.log(\"ENTRE AL IFFFF\")\n      dispatch(register(newUser)).then((data) => {\n        if (data.meta.requestStatus === \"rejected\") {\n          return swal(\"El usuario ya existe\");\n        } else {\n          swal(\"¡Usuario registrado exitosamente!\");\n          navigate(\"/login\");\n        }\n      });\n    }\n  };\n\n  // validaciones\n\n  const [emailValidate, setEmailValidate] = useState(\"inicial\");\n  const [passwordValidate, setPassworsdValidate] = useState(\"inicial\");\n  const [nameValidate, setNameValidate] = useState(\"inicial\");\n  const [lastNameValidate, setLastNameValidate] = useState(\"inicial\");\n\n  const requeridoEmail = (e) => {\n    let expresion = /\\w+@\\w+\\.[a-z]/;\n    //     \\w (es texto)\n    //     \\. (es punto)\n    if (newUser.email !== \"\" && expresion.test(newUser.email)) {\n      setEmailValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setEmailValidate(\"nomostrar\");\n    }\n  };\n\n  const requeridoPassword = (e) => {\n     if (newUser.password !== \"\"  ) {\n      setPassworsdValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setPassworsdValidate(\"nomostrar\");\n    }\n  };\n \n  const requeridoName = (e) => {\n    let expresion = /[A-Za-z]/;\n\n    if (newUser.name !== \"\" && expresion.test(newUser.name)) {\n      setNameValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setNameValidate(\"nomostrar\");\n    }\n  };\n  const requeridoLastName = (e) => {\n    let expresion = /[A-Za-z]/;\n\n    if (newUser.lastName !== \"\" && expresion.test(newUser.lastName)) {\n      setLastNameValidate(\"mostrar\");\n    } else {\n      // el input esta vacio\n      setLastNameValidate(\"nomostrar\");\n    }\n  };\n  return (\n    <div className=\"row no-gutters wrapper\">\n    <div className=\"col-10 col-lg-5\">\n      <form\n        className=\"shadow-lg\"\n        onSubmit={submitHandler}\n        encType=\"multipart/form-data\"\n      >\n        <h1 className=\"mb-3\">Register</h1>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"name_field\"> Nombre </label>\n          <input\n            type=\"name\"\n            id=\"name_field\"\n            className={` form-control ${\n              nameValidate === \"inicial\"\n                ? \"\"\n                : nameValidate === \"mostrar\"\n                ? \"is-valid \"\n                : \"is-invalid\"\n            }             \n                `}\n            name=\"name\"\n            onChange={handleChange}\n            onBlur={requeridoName}\n          />\n          <div className=\"valid-feedback\">Todo bien continúe</div>\n          <div className=\"invalid-feedback\">Entre un nombre válido </div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"lastname_field\"> Apellido </label>\n          <input\n            type=\"lastname\"\n            id=\"lastname_field\"\n            className={` form-control ${\n              lastNameValidate === \"inicial\"\n                ? \"\"\n                : lastNameValidate === \"mostrar\"\n                ? \"is-valid \"\n                : \"is-invalid\"\n            }             \n                `}\n            name=\"lastName\"\n            onChange={handleChange}\n            onBlur={requeridoLastName}\n          />\n          <div className=\"valid-feedback\">Todo bien, continúe</div>\n          <div className=\"invalid-feedback\">Entre un apellido válido </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email_field\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email_field\"\n            className={` form-control ${\n              emailValidate === \"inicial\"\n                ? \"\"\n                : emailValidate === \"mostrar\"\n                ? \"is-valid \"\n                : \"is-invalid\"\n            }             \n                `}\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={requeridoEmail}\n          />\n          <div className=\"valid-feedback\">Todo bien, continúe</div>\n          <div className=\"invalid-feedback\">Ingrese un email válido</div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password_field\">Contraseña</label>\n          <input\n            type=\"password\"\n            id=\"password_field\"\n            className={` form-control ${\n              passwordValidate === \"inicial\"\n                ? \"\"\n                : passwordValidate === \"mostrar\"\n                ? \"is-valid \"\n                : \"is-invalid\"\n            }             \n                `}\n            name=\"password\"\n            onChange={handleChange}\n            onBlur={requeridoPassword}\n          />\n          <div className=\"valid-feedback\">Todo bien, continúe</div>\n          <div className=\"invalid-feedback\">Ingrese una contraseña válida</div>\n        </div>\n\n        <button\n          id=\"register_button\"\n          type=\"submit\"\n          className=\"btn btn-block py-3\"\n        >\n          REGISTER\n        </button>\n      </form>\n    </div>\n  </div>\n  );\n};\n\nexport default Index;\n","export default __webpack_public_path__ + \"static/media/libro-mayor.4e8d30be.png\";","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n import logo from \"../../assets/libro-mayor.png\";\n\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Container from \"react-bootstrap/Container\";\n \nimport Button from \"react-bootstrap/Button\";\n \nimport { RiAccountCircleFill } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../state/user\";\n \nimport { useNavigate } from \"react-router-dom\";\n\nconst AppBar = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.user);\n  \n  const navigate = useNavigate();\n\n  const logOut = (e) => {\n    e.preventDefault();\n    localStorage.clear();\n\n    dispatch(logout());\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <Navbar expand=\"lg\" bg=\"primary\">\n        <Container className=\"appbar\">\n          <div>\n            <Link exact to=\"/\">\n              <Navbar.Brand>\n                <img src={logo} width=\"40\" alt=\"IOT COMERCE\" />\n              </Navbar.Brand>\n            </Link>\n          </div>\n          <div>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              {user.id ? (\n                <div className=\"d-flex justify-content-center align-items-center mx-2\">\n                  <div className=\"mr-2\">\n                    <Link to={\"/operationForm\"}>\n                      <Button className=\"mr-1 bg-dark text-center\">Operación Nueva</Button>\n                    </Link>\n                  </div>\n\n                  <div className=\"text-white h3 d-flex justify-content-center align-items-center \">{`¡Hola, ${user.name}!`}</div>\n                  <NavDropdown\n                    variant=\"light\"\n                    title={<RiAccountCircleFill />}\n                    className=\"h3 bg-dark  mx-3 rounded-pill \"\n                    id=\"basic-nav-dropdown\"\n                  >\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item onClick={logOut}>\n                      Cerrar sesión\n                    </NavDropdown.Item>\n                  </NavDropdown>\n                </div>\n              ) : (\n                <div className=\"d-flex justify-content-around\">\n                  <Link to={\"/login\"}>\n                    <Button className=\"mr-1 bg-dark\">Ingresar</Button>\n                  </Link>\n                  <Link to={\"/register\"}>\n                    <Button variant=\"warning\">Registrarse</Button>\n                  </Link>\n                </div>\n              )}\n            </Navbar.Collapse>\n          </div>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default AppBar;\n\n//color #2e2e2\n","import React from \"react\";\nimport axios from \"axios\";\nimport Home from \"./views/Home.jsx\";\nimport { useDispatch } from \"react-redux\";\nimport Login from \"./components/Login/Index\";\nimport OperationForm from \"./components/OperationForm/Index\";\nimport OperationEdit from \"./components/OperationEdit/Index\";\n\nimport Register from \"./components/Register/Index\";\n// import Footer from \"./components/Footer.jsx\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { setUser } from \"./state/user\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n      ? localStorage.getItem(\"token\")\n      : undefined;\n    if (token) {\n      axios.defaults.headers.authorization = `${token}`;\n      axios.post(\"https://alkemy-back.herokuapp.com/api/auth/me\").then((data) => {\n\n         dispatch(setUser(data.data));\n      });\n    }\n    // eslint-disable-next-line\n   }, []);\n  \n  return (\n    <div>\n      <AppBar />\n\n      <Routes>\n        <Route path=\"/\" element={<Home />}></Route>\n        <Route path=\"operationForm\" element={<OperationForm />}></Route>\n        <Route path=\"/operation/edit/:id\" element={<OperationEdit />}></Route>\n\n        <Route path=\"login\" element={<Login />}></Route>\n        <Route path=\"register\" element={<Register />}></Route>\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport userReducer from \"./user\";\nimport operationReducer from \"./operation\";\n\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n  reducer: {\n    user: userReducer,\n    operation: operationReducer,\n  },\n});\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\"\nimport store from \"./state/store\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}